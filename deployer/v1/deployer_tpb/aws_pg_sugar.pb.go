// Code generated by protoc-gen-go-sugar. DO NOT EDIT.

package deployer_tpb

import (
	driver "database/sql/driver"
	fmt "fmt"
)

// PostgresStatus
const (
	PostgresStatus_UNSPECIFIED PostgresStatus = 0
	PostgresStatus_STARTED     PostgresStatus = 1
	PostgresStatus_DONE        PostgresStatus = 2
	PostgresStatus_ERROR       PostgresStatus = 3
)

var (
	PostgresStatus_name_short = map[int32]string{
		0: "UNSPECIFIED",
		1: "STARTED",
		2: "DONE",
		3: "ERROR",
	}
	PostgresStatus_value_short = map[string]int32{
		"UNSPECIFIED": 0,
		"STARTED":     1,
		"DONE":        2,
		"ERROR":       3,
	}
	PostgresStatus_value_either = map[string]int32{
		"UNSPECIFIED":                 0,
		"POSTGRES_STATUS_UNSPECIFIED": 0,
		"STARTED":                     1,
		"POSTGRES_STATUS_STARTED":     1,
		"DONE":                        2,
		"POSTGRES_STATUS_DONE":        2,
		"ERROR":                       3,
		"POSTGRES_STATUS_ERROR":       3,
	}
)

// ShortString returns the un-prefixed string representation of the enum value
func (x PostgresStatus) ShortString() string {
	return PostgresStatus_name_short[int32(x)]
}
func (x PostgresStatus) Value() (driver.Value, error) {
	return []uint8(x.ShortString()), nil
}
func (x *PostgresStatus) Scan(value interface{}) error {
	var strVal string
	switch vt := value.(type) {
	case []uint8:
		strVal = string(vt)
	case string:
		strVal = vt
	default:
		return fmt.Errorf("invalid type %T", value)
	}
	val := PostgresStatus_value_either[strVal]
	*x = PostgresStatus(val)
	return nil
}
