// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: o5/deployer/v1/topic/aws_ecs.proto

package deployer_tpb

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	messaging_pb "github.com/pentops/o5-go/messaging/v1/messaging_pb"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RunECSTaskMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Request        *messaging_pb.RequestMetadata `protobuf:"bytes,1,opt,name=request,proto3" json:"request,omitempty"`
	TaskDefinition string                        `protobuf:"bytes,2,opt,name=task_definition,json=taskDefinition,proto3" json:"task_definition,omitempty"`
	Count          int32                         `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
	Cluster        string                        `protobuf:"bytes,4,opt,name=cluster,proto3" json:"cluster,omitempty"`
}

func (x *RunECSTaskMessage) Reset() {
	*x = RunECSTaskMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_o5_deployer_v1_topic_aws_ecs_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunECSTaskMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunECSTaskMessage) ProtoMessage() {}

func (x *RunECSTaskMessage) ProtoReflect() protoreflect.Message {
	mi := &file_o5_deployer_v1_topic_aws_ecs_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunECSTaskMessage.ProtoReflect.Descriptor instead.
func (*RunECSTaskMessage) Descriptor() ([]byte, []int) {
	return file_o5_deployer_v1_topic_aws_ecs_proto_rawDescGZIP(), []int{0}
}

func (x *RunECSTaskMessage) GetRequest() *messaging_pb.RequestMetadata {
	if x != nil {
		return x.Request
	}
	return nil
}

func (x *RunECSTaskMessage) GetTaskDefinition() string {
	if x != nil {
		return x.TaskDefinition
	}
	return ""
}

func (x *RunECSTaskMessage) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *RunECSTaskMessage) GetCluster() string {
	if x != nil {
		return x.Cluster
	}
	return ""
}

type ECSTaskStatusMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Request *messaging_pb.RequestMetadata `protobuf:"bytes,1,opt,name=request,proto3" json:"request,omitempty"`
	EventId string                        `protobuf:"bytes,2,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	Event   *ECSTaskEventType             `protobuf:"bytes,3,opt,name=event,proto3" json:"event,omitempty"`
	TaskArn string                        `protobuf:"bytes,4,opt,name=task_arn,json=taskArn,proto3" json:"task_arn,omitempty"`
}

func (x *ECSTaskStatusMessage) Reset() {
	*x = ECSTaskStatusMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_o5_deployer_v1_topic_aws_ecs_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ECSTaskStatusMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ECSTaskStatusMessage) ProtoMessage() {}

func (x *ECSTaskStatusMessage) ProtoReflect() protoreflect.Message {
	mi := &file_o5_deployer_v1_topic_aws_ecs_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ECSTaskStatusMessage.ProtoReflect.Descriptor instead.
func (*ECSTaskStatusMessage) Descriptor() ([]byte, []int) {
	return file_o5_deployer_v1_topic_aws_ecs_proto_rawDescGZIP(), []int{1}
}

func (x *ECSTaskStatusMessage) GetRequest() *messaging_pb.RequestMetadata {
	if x != nil {
		return x.Request
	}
	return nil
}

func (x *ECSTaskStatusMessage) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

func (x *ECSTaskStatusMessage) GetEvent() *ECSTaskEventType {
	if x != nil {
		return x.Event
	}
	return nil
}

func (x *ECSTaskStatusMessage) GetTaskArn() string {
	if x != nil {
		return x.TaskArn
	}
	return ""
}

type ECSTaskEventType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// https://docs.aws.amazon.com/AmazonECS/latest/developerguide/scheduling_tasks.html#task-lifecycle
	//
	// Types that are assignable to Type:
	//
	//	*ECSTaskEventType_Pending_
	//	*ECSTaskEventType_Running_
	//	*ECSTaskEventType_Failed_
	//	*ECSTaskEventType_Exited_
	//	*ECSTaskEventType_Stopped_
	Type isECSTaskEventType_Type `protobuf_oneof:"type"`
}

func (x *ECSTaskEventType) Reset() {
	*x = ECSTaskEventType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_o5_deployer_v1_topic_aws_ecs_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ECSTaskEventType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ECSTaskEventType) ProtoMessage() {}

func (x *ECSTaskEventType) ProtoReflect() protoreflect.Message {
	mi := &file_o5_deployer_v1_topic_aws_ecs_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ECSTaskEventType.ProtoReflect.Descriptor instead.
func (*ECSTaskEventType) Descriptor() ([]byte, []int) {
	return file_o5_deployer_v1_topic_aws_ecs_proto_rawDescGZIP(), []int{2}
}

func (m *ECSTaskEventType) GetType() isECSTaskEventType_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *ECSTaskEventType) GetPending() *ECSTaskEventType_Pending {
	if x, ok := x.GetType().(*ECSTaskEventType_Pending_); ok {
		return x.Pending
	}
	return nil
}

func (x *ECSTaskEventType) GetRunning() *ECSTaskEventType_Running {
	if x, ok := x.GetType().(*ECSTaskEventType_Running_); ok {
		return x.Running
	}
	return nil
}

func (x *ECSTaskEventType) GetFailed() *ECSTaskEventType_Failed {
	if x, ok := x.GetType().(*ECSTaskEventType_Failed_); ok {
		return x.Failed
	}
	return nil
}

func (x *ECSTaskEventType) GetExited() *ECSTaskEventType_Exited {
	if x, ok := x.GetType().(*ECSTaskEventType_Exited_); ok {
		return x.Exited
	}
	return nil
}

func (x *ECSTaskEventType) GetStopped() *ECSTaskEventType_Stopped {
	if x, ok := x.GetType().(*ECSTaskEventType_Stopped_); ok {
		return x.Stopped
	}
	return nil
}

type isECSTaskEventType_Type interface {
	isECSTaskEventType_Type()
}

type ECSTaskEventType_Pending_ struct {
	// Maps directly to the Pending state in ECS, indicates some level of
	// success
	Pending *ECSTaskEventType_Pending `protobuf:"bytes,1,opt,name=pending,proto3,oneof"`
}

type ECSTaskEventType_Running_ struct {
	// Maps directly to the Running state in ECS
	Running *ECSTaskEventType_Running `protobuf:"bytes,2,opt,name=running,proto3,oneof"`
}

type ECSTaskEventType_Failed_ struct {
	// Did not start, i.e. did not get to Running
	Failed *ECSTaskEventType_Failed `protobuf:"bytes,3,opt,name=failed,proto3,oneof"`
}

type ECSTaskEventType_Exited_ struct {
	// The code itself exited, after Running
	Exited *ECSTaskEventType_Exited `protobuf:"bytes,4,opt,name=exited,proto3,oneof"`
}

type ECSTaskEventType_Stopped_ struct {
	// Deliberately stoped, e.g. by scaling, after Running
	Stopped *ECSTaskEventType_Stopped `protobuf:"bytes,5,opt,name=stopped,proto3,oneof"`
}

func (*ECSTaskEventType_Pending_) isECSTaskEventType_Type() {}

func (*ECSTaskEventType_Running_) isECSTaskEventType_Type() {}

func (*ECSTaskEventType_Failed_) isECSTaskEventType_Type() {}

func (*ECSTaskEventType_Exited_) isECSTaskEventType_Type() {}

func (*ECSTaskEventType_Stopped_) isECSTaskEventType_Type() {}

type ECSTaskEventType_Pending struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ECSTaskEventType_Pending) Reset() {
	*x = ECSTaskEventType_Pending{}
	if protoimpl.UnsafeEnabled {
		mi := &file_o5_deployer_v1_topic_aws_ecs_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ECSTaskEventType_Pending) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ECSTaskEventType_Pending) ProtoMessage() {}

func (x *ECSTaskEventType_Pending) ProtoReflect() protoreflect.Message {
	mi := &file_o5_deployer_v1_topic_aws_ecs_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ECSTaskEventType_Pending.ProtoReflect.Descriptor instead.
func (*ECSTaskEventType_Pending) Descriptor() ([]byte, []int) {
	return file_o5_deployer_v1_topic_aws_ecs_proto_rawDescGZIP(), []int{2, 0}
}

type ECSTaskEventType_Running struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ECSTaskEventType_Running) Reset() {
	*x = ECSTaskEventType_Running{}
	if protoimpl.UnsafeEnabled {
		mi := &file_o5_deployer_v1_topic_aws_ecs_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ECSTaskEventType_Running) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ECSTaskEventType_Running) ProtoMessage() {}

func (x *ECSTaskEventType_Running) ProtoReflect() protoreflect.Message {
	mi := &file_o5_deployer_v1_topic_aws_ecs_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ECSTaskEventType_Running.ProtoReflect.Descriptor instead.
func (*ECSTaskEventType_Running) Descriptor() ([]byte, []int) {
	return file_o5_deployer_v1_topic_aws_ecs_proto_rawDescGZIP(), []int{2, 1}
}

type ECSTaskEventType_Failed struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reason        string  `protobuf:"bytes,1,opt,name=reason,proto3" json:"reason,omitempty"`
	ContainerName *string `protobuf:"bytes,2,opt,name=container_name,json=containerName,proto3,oneof" json:"container_name,omitempty"`
}

func (x *ECSTaskEventType_Failed) Reset() {
	*x = ECSTaskEventType_Failed{}
	if protoimpl.UnsafeEnabled {
		mi := &file_o5_deployer_v1_topic_aws_ecs_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ECSTaskEventType_Failed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ECSTaskEventType_Failed) ProtoMessage() {}

func (x *ECSTaskEventType_Failed) ProtoReflect() protoreflect.Message {
	mi := &file_o5_deployer_v1_topic_aws_ecs_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ECSTaskEventType_Failed.ProtoReflect.Descriptor instead.
func (*ECSTaskEventType_Failed) Descriptor() ([]byte, []int) {
	return file_o5_deployer_v1_topic_aws_ecs_proto_rawDescGZIP(), []int{2, 2}
}

func (x *ECSTaskEventType_Failed) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *ECSTaskEventType_Failed) GetContainerName() string {
	if x != nil && x.ContainerName != nil {
		return *x.ContainerName
	}
	return ""
}

type ECSTaskEventType_Exited struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContainerName string `protobuf:"bytes,1,opt,name=container_name,json=containerName,proto3" json:"container_name,omitempty"`
	ExitCode      int32  `protobuf:"varint,2,opt,name=exit_code,json=exitCode,proto3" json:"exit_code,omitempty"`
}

func (x *ECSTaskEventType_Exited) Reset() {
	*x = ECSTaskEventType_Exited{}
	if protoimpl.UnsafeEnabled {
		mi := &file_o5_deployer_v1_topic_aws_ecs_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ECSTaskEventType_Exited) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ECSTaskEventType_Exited) ProtoMessage() {}

func (x *ECSTaskEventType_Exited) ProtoReflect() protoreflect.Message {
	mi := &file_o5_deployer_v1_topic_aws_ecs_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ECSTaskEventType_Exited.ProtoReflect.Descriptor instead.
func (*ECSTaskEventType_Exited) Descriptor() ([]byte, []int) {
	return file_o5_deployer_v1_topic_aws_ecs_proto_rawDescGZIP(), []int{2, 3}
}

func (x *ECSTaskEventType_Exited) GetContainerName() string {
	if x != nil {
		return x.ContainerName
	}
	return ""
}

func (x *ECSTaskEventType_Exited) GetExitCode() int32 {
	if x != nil {
		return x.ExitCode
	}
	return 0
}

type ECSTaskEventType_Stopped struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reason string `protobuf:"bytes,1,opt,name=reason,proto3" json:"reason,omitempty"`
}

func (x *ECSTaskEventType_Stopped) Reset() {
	*x = ECSTaskEventType_Stopped{}
	if protoimpl.UnsafeEnabled {
		mi := &file_o5_deployer_v1_topic_aws_ecs_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ECSTaskEventType_Stopped) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ECSTaskEventType_Stopped) ProtoMessage() {}

func (x *ECSTaskEventType_Stopped) ProtoReflect() protoreflect.Message {
	mi := &file_o5_deployer_v1_topic_aws_ecs_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ECSTaskEventType_Stopped.ProtoReflect.Descriptor instead.
func (*ECSTaskEventType_Stopped) Descriptor() ([]byte, []int) {
	return file_o5_deployer_v1_topic_aws_ecs_proto_rawDescGZIP(), []int{2, 4}
}

func (x *ECSTaskEventType_Stopped) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

var File_o5_deployer_v1_topic_aws_ecs_proto protoreflect.FileDescriptor

var file_o5_deployer_v1_topic_aws_ecs_proto_rawDesc = []byte{
	0x0a, 0x22, 0x6f, 0x35, 0x2f, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x72, 0x2f, 0x76, 0x31,
	0x2f, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x2f, 0x61, 0x77, 0x73, 0x5f, 0x65, 0x63, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x14, 0x6f, 0x35, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x1a, 0x1b, 0x62, 0x75, 0x66, 0x2f,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x21, 0x6f, 0x35, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x69,
	0x6e, 0x67, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x6f, 0x35, 0x2f, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x69, 0x6e, 0x67, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x65, 0x71, 0x72, 0x65, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa8, 0x01, 0x0a, 0x11, 0x52, 0x75, 0x6e, 0x45, 0x43, 0x53,
	0x54, 0x61, 0x73, 0x6b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3a, 0x0a, 0x07, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6f,
	0x35, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x07,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x74, 0x61, 0x73, 0x6b, 0x5f,
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x74, 0x61, 0x73, 0x6b, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x22, 0xd0, 0x01, 0x0a, 0x14, 0x45, 0x43, 0x53, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3a, 0x0a, 0x07, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6f, 0x35, 0x2e,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x07, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x08, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xba, 0x48, 0x05, 0x72, 0x03, 0xb0, 0x01,
	0x01, 0x52, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x3c, 0x0a, 0x05, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6f, 0x35, 0x2e, 0x64,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x74, 0x6f, 0x70, 0x69, 0x63,
	0x2e, 0x45, 0x43, 0x53, 0x54, 0x61, 0x73, 0x6b, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x61, 0x73, 0x6b,
	0x5f, 0x61, 0x72, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x61, 0x73, 0x6b,
	0x41, 0x72, 0x6e, 0x22, 0xf8, 0x04, 0x0a, 0x10, 0x45, 0x43, 0x53, 0x54, 0x61, 0x73, 0x6b, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x4a, 0x0a, 0x07, 0x70, 0x65, 0x6e, 0x64,
	0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x6f, 0x35, 0x2e, 0x64,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x74, 0x6f, 0x70, 0x69, 0x63,
	0x2e, 0x45, 0x43, 0x53, 0x54, 0x61, 0x73, 0x6b, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x2e, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x07, 0x70, 0x65, 0x6e,
	0x64, 0x69, 0x6e, 0x67, 0x12, 0x4a, 0x0a, 0x07, 0x72, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x6f, 0x35, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f,
	0x79, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x2e, 0x45, 0x43, 0x53,
	0x54, 0x61, 0x73, 0x6b, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x75,
	0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x07, 0x72, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67,
	0x12, 0x47, 0x0a, 0x06, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2d, 0x2e, 0x6f, 0x35, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x2e, 0x45, 0x43, 0x53, 0x54, 0x61, 0x73, 0x6b, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x48,
	0x00, 0x52, 0x06, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x12, 0x47, 0x0a, 0x06, 0x65, 0x78, 0x69,
	0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x6f, 0x35, 0x2e, 0x64,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x74, 0x6f, 0x70, 0x69, 0x63,
	0x2e, 0x45, 0x43, 0x53, 0x54, 0x61, 0x73, 0x6b, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x2e, 0x45, 0x78, 0x69, 0x74, 0x65, 0x64, 0x48, 0x00, 0x52, 0x06, 0x65, 0x78, 0x69, 0x74,
	0x65, 0x64, 0x12, 0x4a, 0x0a, 0x07, 0x73, 0x74, 0x6f, 0x70, 0x70, 0x65, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x6f, 0x35, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x2e, 0x45, 0x43, 0x53, 0x54, 0x61,
	0x73, 0x6b, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x53, 0x74, 0x6f, 0x70,
	0x70, 0x65, 0x64, 0x48, 0x00, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x70, 0x70, 0x65, 0x64, 0x1a, 0x09,
	0x0a, 0x07, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x1a, 0x09, 0x0a, 0x07, 0x52, 0x75, 0x6e,
	0x6e, 0x69, 0x6e, 0x67, 0x1a, 0x5f, 0x0a, 0x06, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x2a, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69,
	0x6e, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x88,
	0x01, 0x01, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x1a, 0x4c, 0x0a, 0x06, 0x45, 0x78, 0x69, 0x74, 0x65, 0x64, 0x12,
	0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x78, 0x69, 0x74, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x65, 0x78, 0x69, 0x74, 0x43,
	0x6f, 0x64, 0x65, 0x1a, 0x21, 0x0a, 0x07, 0x53, 0x74, 0x6f, 0x70, 0x70, 0x65, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x42, 0x06, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x32, 0x7c,
	0x0a, 0x0f, 0x45, 0x43, 0x53, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x6f, 0x70, 0x69,
	0x63, 0x12, 0x4f, 0x0a, 0x0a, 0x52, 0x75, 0x6e, 0x45, 0x43, 0x53, 0x54, 0x61, 0x73, 0x6b, 0x12,
	0x27, 0x2e, 0x6f, 0x35, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x2e, 0x52, 0x75, 0x6e, 0x45, 0x43, 0x53, 0x54, 0x61, 0x73,
	0x6b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x22, 0x00, 0x1a, 0x18, 0xd2, 0xa2, 0xf5, 0xe4, 0x02, 0x12, 0x1a, 0x10, 0x0a, 0x0e, 0x6f, 0x35,
	0x2d, 0x61, 0x77, 0x73, 0x2d, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x32, 0x80, 0x01, 0x0a,
	0x0d, 0x45, 0x43, 0x53, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x55,
	0x0a, 0x0d, 0x45, 0x43, 0x53, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x2a, 0x2e, 0x6f, 0x35, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x2e, 0x45, 0x43, 0x53, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x00, 0x1a, 0x18, 0xd2, 0xa2, 0xf5, 0xe4, 0x02, 0x12, 0x22, 0x10, 0x0a,
	0x0e, 0x6f, 0x35, 0x2d, 0x61, 0x77, 0x73, 0x2d, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x42,
	0x33, 0x5a, 0x31, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x65,
	0x6e, 0x74, 0x6f, 0x70, 0x73, 0x2f, 0x6f, 0x35, 0x2d, 0x67, 0x6f, 0x2f, 0x64, 0x65, 0x70, 0x6c,
	0x6f, 0x79, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x72,
	0x5f, 0x74, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_o5_deployer_v1_topic_aws_ecs_proto_rawDescOnce sync.Once
	file_o5_deployer_v1_topic_aws_ecs_proto_rawDescData = file_o5_deployer_v1_topic_aws_ecs_proto_rawDesc
)

func file_o5_deployer_v1_topic_aws_ecs_proto_rawDescGZIP() []byte {
	file_o5_deployer_v1_topic_aws_ecs_proto_rawDescOnce.Do(func() {
		file_o5_deployer_v1_topic_aws_ecs_proto_rawDescData = protoimpl.X.CompressGZIP(file_o5_deployer_v1_topic_aws_ecs_proto_rawDescData)
	})
	return file_o5_deployer_v1_topic_aws_ecs_proto_rawDescData
}

var file_o5_deployer_v1_topic_aws_ecs_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_o5_deployer_v1_topic_aws_ecs_proto_goTypes = []interface{}{
	(*RunECSTaskMessage)(nil),            // 0: o5.deployer.v1.topic.RunECSTaskMessage
	(*ECSTaskStatusMessage)(nil),         // 1: o5.deployer.v1.topic.ECSTaskStatusMessage
	(*ECSTaskEventType)(nil),             // 2: o5.deployer.v1.topic.ECSTaskEventType
	(*ECSTaskEventType_Pending)(nil),     // 3: o5.deployer.v1.topic.ECSTaskEventType.Pending
	(*ECSTaskEventType_Running)(nil),     // 4: o5.deployer.v1.topic.ECSTaskEventType.Running
	(*ECSTaskEventType_Failed)(nil),      // 5: o5.deployer.v1.topic.ECSTaskEventType.Failed
	(*ECSTaskEventType_Exited)(nil),      // 6: o5.deployer.v1.topic.ECSTaskEventType.Exited
	(*ECSTaskEventType_Stopped)(nil),     // 7: o5.deployer.v1.topic.ECSTaskEventType.Stopped
	(*messaging_pb.RequestMetadata)(nil), // 8: o5.messaging.v1.RequestMetadata
	(*emptypb.Empty)(nil),                // 9: google.protobuf.Empty
}
var file_o5_deployer_v1_topic_aws_ecs_proto_depIdxs = []int32{
	8,  // 0: o5.deployer.v1.topic.RunECSTaskMessage.request:type_name -> o5.messaging.v1.RequestMetadata
	8,  // 1: o5.deployer.v1.topic.ECSTaskStatusMessage.request:type_name -> o5.messaging.v1.RequestMetadata
	2,  // 2: o5.deployer.v1.topic.ECSTaskStatusMessage.event:type_name -> o5.deployer.v1.topic.ECSTaskEventType
	3,  // 3: o5.deployer.v1.topic.ECSTaskEventType.pending:type_name -> o5.deployer.v1.topic.ECSTaskEventType.Pending
	4,  // 4: o5.deployer.v1.topic.ECSTaskEventType.running:type_name -> o5.deployer.v1.topic.ECSTaskEventType.Running
	5,  // 5: o5.deployer.v1.topic.ECSTaskEventType.failed:type_name -> o5.deployer.v1.topic.ECSTaskEventType.Failed
	6,  // 6: o5.deployer.v1.topic.ECSTaskEventType.exited:type_name -> o5.deployer.v1.topic.ECSTaskEventType.Exited
	7,  // 7: o5.deployer.v1.topic.ECSTaskEventType.stopped:type_name -> o5.deployer.v1.topic.ECSTaskEventType.Stopped
	0,  // 8: o5.deployer.v1.topic.ECSRequestTopic.RunECSTask:input_type -> o5.deployer.v1.topic.RunECSTaskMessage
	1,  // 9: o5.deployer.v1.topic.ECSReplyTopic.ECSTaskStatus:input_type -> o5.deployer.v1.topic.ECSTaskStatusMessage
	9,  // 10: o5.deployer.v1.topic.ECSRequestTopic.RunECSTask:output_type -> google.protobuf.Empty
	9,  // 11: o5.deployer.v1.topic.ECSReplyTopic.ECSTaskStatus:output_type -> google.protobuf.Empty
	10, // [10:12] is the sub-list for method output_type
	8,  // [8:10] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_o5_deployer_v1_topic_aws_ecs_proto_init() }
func file_o5_deployer_v1_topic_aws_ecs_proto_init() {
	if File_o5_deployer_v1_topic_aws_ecs_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_o5_deployer_v1_topic_aws_ecs_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunECSTaskMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_o5_deployer_v1_topic_aws_ecs_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ECSTaskStatusMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_o5_deployer_v1_topic_aws_ecs_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ECSTaskEventType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_o5_deployer_v1_topic_aws_ecs_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ECSTaskEventType_Pending); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_o5_deployer_v1_topic_aws_ecs_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ECSTaskEventType_Running); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_o5_deployer_v1_topic_aws_ecs_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ECSTaskEventType_Failed); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_o5_deployer_v1_topic_aws_ecs_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ECSTaskEventType_Exited); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_o5_deployer_v1_topic_aws_ecs_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ECSTaskEventType_Stopped); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_o5_deployer_v1_topic_aws_ecs_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*ECSTaskEventType_Pending_)(nil),
		(*ECSTaskEventType_Running_)(nil),
		(*ECSTaskEventType_Failed_)(nil),
		(*ECSTaskEventType_Exited_)(nil),
		(*ECSTaskEventType_Stopped_)(nil),
	}
	file_o5_deployer_v1_topic_aws_ecs_proto_msgTypes[5].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_o5_deployer_v1_topic_aws_ecs_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_o5_deployer_v1_topic_aws_ecs_proto_goTypes,
		DependencyIndexes: file_o5_deployer_v1_topic_aws_ecs_proto_depIdxs,
		MessageInfos:      file_o5_deployer_v1_topic_aws_ecs_proto_msgTypes,
	}.Build()
	File_o5_deployer_v1_topic_aws_ecs_proto = out.File
	file_o5_deployer_v1_topic_aws_ecs_proto_rawDesc = nil
	file_o5_deployer_v1_topic_aws_ecs_proto_goTypes = nil
	file_o5_deployer_v1_topic_aws_ecs_proto_depIdxs = nil
}
