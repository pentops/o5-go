// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: o5/application/v1/application.proto

package application_pb

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	_ "github.com/pentops/protostate/gen/list/v1/psml_pb"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RouteProtocol int32

const (
	RouteProtocol_ROUTE_PROTOCOL_UNSPECIFIED RouteProtocol = 0
	RouteProtocol_ROUTE_PROTOCOL_HTTP        RouteProtocol = 1
	RouteProtocol_ROUTE_PROTOCOL_GRPC        RouteProtocol = 2
)

// Enum value maps for RouteProtocol.
var (
	RouteProtocol_name = map[int32]string{
		0: "ROUTE_PROTOCOL_UNSPECIFIED",
		1: "ROUTE_PROTOCOL_HTTP",
		2: "ROUTE_PROTOCOL_GRPC",
	}
	RouteProtocol_value = map[string]int32{
		"ROUTE_PROTOCOL_UNSPECIFIED": 0,
		"ROUTE_PROTOCOL_HTTP":        1,
		"ROUTE_PROTOCOL_GRPC":        2,
	}
)

func (x RouteProtocol) Enum() *RouteProtocol {
	p := new(RouteProtocol)
	*p = x
	return p
}

func (x RouteProtocol) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RouteProtocol) Descriptor() protoreflect.EnumDescriptor {
	return file_o5_application_v1_application_proto_enumTypes[0].Descriptor()
}

func (RouteProtocol) Type() protoreflect.EnumType {
	return &file_o5_application_v1_application_proto_enumTypes[0]
}

func (x RouteProtocol) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RouteProtocol.Descriptor instead.
func (RouteProtocol) EnumDescriptor() ([]byte, []int) {
	return file_o5_application_v1_application_proto_rawDescGZIP(), []int{0}
}

type RouteGroup int32

const (
	RouteGroup_ROUTE_GROUP_UNSPECIFIED RouteGroup = 0
	RouteGroup_ROUTE_GROUP_FIRST       RouteGroup = 1
	RouteGroup_ROUTE_GROUP_NORMAL      RouteGroup = 2
	RouteGroup_ROUTE_GROUP_FALLBACK    RouteGroup = 3
)

// Enum value maps for RouteGroup.
var (
	RouteGroup_name = map[int32]string{
		0: "ROUTE_GROUP_UNSPECIFIED",
		1: "ROUTE_GROUP_FIRST",
		2: "ROUTE_GROUP_NORMAL",
		3: "ROUTE_GROUP_FALLBACK",
	}
	RouteGroup_value = map[string]int32{
		"ROUTE_GROUP_UNSPECIFIED": 0,
		"ROUTE_GROUP_FIRST":       1,
		"ROUTE_GROUP_NORMAL":      2,
		"ROUTE_GROUP_FALLBACK":    3,
	}
)

func (x RouteGroup) Enum() *RouteGroup {
	p := new(RouteGroup)
	*p = x
	return p
}

func (x RouteGroup) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RouteGroup) Descriptor() protoreflect.EnumDescriptor {
	return file_o5_application_v1_application_proto_enumTypes[1].Descriptor()
}

func (RouteGroup) Type() protoreflect.EnumType {
	return &file_o5_application_v1_application_proto_enumTypes[1]
}

func (x RouteGroup) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RouteGroup.Descriptor instead.
func (RouteGroup) EnumDescriptor() ([]byte, []int) {
	return file_o5_application_v1_application_proto_rawDescGZIP(), []int{1}
}

type Demand int32

const (
	Demand_DEMAND_UNSPECIFIED Demand = 0
	Demand_DEMAND_LIGHT       Demand = 1
	Demand_DEMAND_MEDIUM      Demand = 2
	Demand_DEMAND_HEAVY       Demand = 3
)

// Enum value maps for Demand.
var (
	Demand_name = map[int32]string{
		0: "DEMAND_UNSPECIFIED",
		1: "DEMAND_LIGHT",
		2: "DEMAND_MEDIUM",
		3: "DEMAND_HEAVY",
	}
	Demand_value = map[string]int32{
		"DEMAND_UNSPECIFIED": 0,
		"DEMAND_LIGHT":       1,
		"DEMAND_MEDIUM":      2,
		"DEMAND_HEAVY":       3,
	}
)

func (x Demand) Enum() *Demand {
	p := new(Demand)
	*p = x
	return p
}

func (x Demand) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Demand) Descriptor() protoreflect.EnumDescriptor {
	return file_o5_application_v1_application_proto_enumTypes[2].Descriptor()
}

func (Demand) Type() protoreflect.EnumType {
	return &file_o5_application_v1_application_proto_enumTypes[2]
}

func (x Demand) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Demand.Descriptor instead.
func (Demand) EnumDescriptor() ([]byte, []int) {
	return file_o5_application_v1_application_proto_rawDescGZIP(), []int{2}
}

type O5Var int32

const (
	O5Var_O5_VAR_UNSPECIFIED O5Var = 0
	// address of the sidecar / adapter for gRPC dial
	O5Var_O5_VAR_ADAPTER_ENDPOINT O5Var = 1
)

// Enum value maps for O5Var.
var (
	O5Var_name = map[int32]string{
		0: "O5_VAR_UNSPECIFIED",
		1: "O5_VAR_ADAPTER_ENDPOINT",
	}
	O5Var_value = map[string]int32{
		"O5_VAR_UNSPECIFIED":      0,
		"O5_VAR_ADAPTER_ENDPOINT": 1,
	}
)

func (x O5Var) Enum() *O5Var {
	p := new(O5Var)
	*p = x
	return p
}

func (x O5Var) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (O5Var) Descriptor() protoreflect.EnumDescriptor {
	return file_o5_application_v1_application_proto_enumTypes[3].Descriptor()
}

func (O5Var) Type() protoreflect.EnumType {
	return &file_o5_application_v1_application_proto_enumTypes[3]
}

func (x O5Var) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use O5Var.Descriptor instead.
func (O5Var) EnumDescriptor() ([]byte, []int) {
	return file_o5_application_v1_application_proto_rawDescGZIP(), []int{3}
}

type Application struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name             string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Targets          []*Target         `protobuf:"bytes,4,rep,name=targets,proto3" json:"targets,omitempty"`
	Blobstores       []*Blobstore      `protobuf:"bytes,7,rep,name=blobstores,proto3" json:"blobstores,omitempty"`
	Databases        []*Database       `protobuf:"bytes,8,rep,name=databases,proto3" json:"databases,omitempty"`
	Runtimes         []*Runtime        `protobuf:"bytes,9,rep,name=runtimes,proto3" json:"runtimes,omitempty"`
	Secrets          []*Secret         `protobuf:"bytes,10,rep,name=secrets,proto3" json:"secrets,omitempty"`
	DeploymentConfig *DeploymentConfig `protobuf:"bytes,11,opt,name=deployment_config,json=deploymentConfig,proto3" json:"deployment_config,omitempty"`
	// Only valid when deployed onto AWS, this should be used only for
	// infrastructure adapters, e.g. a service which sends emails using SES, the
	// o5 deployer itself, dante etc.
	AwsConfig     *AWSConfig     `protobuf:"bytes,12,opt,name=aws_config,json=awsConfig,proto3" json:"aws_config,omitempty"`
	SidecarConfig *SidecarConfig `protobuf:"bytes,13,opt,name=sidecar_config,json=sidecarConfig,proto3" json:"sidecar_config,omitempty"`
}

func (x *Application) Reset() {
	*x = Application{}
	if protoimpl.UnsafeEnabled {
		mi := &file_o5_application_v1_application_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Application) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Application) ProtoMessage() {}

func (x *Application) ProtoReflect() protoreflect.Message {
	mi := &file_o5_application_v1_application_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Application.ProtoReflect.Descriptor instead.
func (*Application) Descriptor() ([]byte, []int) {
	return file_o5_application_v1_application_proto_rawDescGZIP(), []int{0}
}

func (x *Application) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Application) GetTargets() []*Target {
	if x != nil {
		return x.Targets
	}
	return nil
}

func (x *Application) GetBlobstores() []*Blobstore {
	if x != nil {
		return x.Blobstores
	}
	return nil
}

func (x *Application) GetDatabases() []*Database {
	if x != nil {
		return x.Databases
	}
	return nil
}

func (x *Application) GetRuntimes() []*Runtime {
	if x != nil {
		return x.Runtimes
	}
	return nil
}

func (x *Application) GetSecrets() []*Secret {
	if x != nil {
		return x.Secrets
	}
	return nil
}

func (x *Application) GetDeploymentConfig() *DeploymentConfig {
	if x != nil {
		return x.DeploymentConfig
	}
	return nil
}

func (x *Application) GetAwsConfig() *AWSConfig {
	if x != nil {
		return x.AwsConfig
	}
	return nil
}

func (x *Application) GetSidecarConfig() *SidecarConfig {
	if x != nil {
		return x.SidecarConfig
	}
	return nil
}

type SidecarConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// chance percentage of sidecar behavior: replay message or process then treat as a deadletter
	ReplayChance     int64 `protobuf:"varint,1,opt,name=replay_chance,json=replayChance,proto3" json:"replay_chance,omitempty"`
	DeadletterChance int64 `protobuf:"varint,2,opt,name=deadletter_chance,json=deadletterChance,proto3" json:"deadletter_chance,omitempty"`
}

func (x *SidecarConfig) Reset() {
	*x = SidecarConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_o5_application_v1_application_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SidecarConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SidecarConfig) ProtoMessage() {}

func (x *SidecarConfig) ProtoReflect() protoreflect.Message {
	mi := &file_o5_application_v1_application_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SidecarConfig.ProtoReflect.Descriptor instead.
func (*SidecarConfig) Descriptor() ([]byte, []int) {
	return file_o5_application_v1_application_proto_rawDescGZIP(), []int{1}
}

func (x *SidecarConfig) GetReplayChance() int64 {
	if x != nil {
		return x.ReplayChance
	}
	return 0
}

func (x *SidecarConfig) GetDeadletterChance() int64 {
	if x != nil {
		return x.DeadletterChance
	}
	return 0
}

type DeploymentConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Migrates the stack in one single call, not compatible with database
	// migration
	QuickMode bool `protobuf:"varint,1,opt,name=quick_mode,json=quickMode,proto3" json:"quick_mode,omitempty"`
}

func (x *DeploymentConfig) Reset() {
	*x = DeploymentConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_o5_application_v1_application_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeploymentConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeploymentConfig) ProtoMessage() {}

func (x *DeploymentConfig) ProtoReflect() protoreflect.Message {
	mi := &file_o5_application_v1_application_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeploymentConfig.ProtoReflect.Descriptor instead.
func (*DeploymentConfig) Descriptor() ([]byte, []int) {
	return file_o5_application_v1_application_proto_rawDescGZIP(), []int{2}
}

func (x *DeploymentConfig) GetQuickMode() bool {
	if x != nil {
		return x.QuickMode
	}
	return false
}

type Target struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"` //Topology topology = 2;
}

func (x *Target) Reset() {
	*x = Target{}
	if protoimpl.UnsafeEnabled {
		mi := &file_o5_application_v1_application_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Target) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Target) ProtoMessage() {}

func (x *Target) ProtoReflect() protoreflect.Message {
	mi := &file_o5_application_v1_application_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Target.ProtoReflect.Descriptor instead.
func (*Target) Descriptor() ([]byte, []int) {
	return file_o5_application_v1_application_proto_rawDescGZIP(), []int{3}
}

func (x *Target) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type Blobstore struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Grants []*Grant `protobuf:"bytes,2,rep,name=grants,proto3" json:"grants,omitempty"`
	// The blobstore is a reference to a one owned by another application, it will
	// not be created in the stack for the current application, but permissions
	// will be granted.
	Ref *BlobstoreRef `protobuf:"bytes,3,opt,name=ref,proto3" json:"ref,omitempty"`
}

func (x *Blobstore) Reset() {
	*x = Blobstore{}
	if protoimpl.UnsafeEnabled {
		mi := &file_o5_application_v1_application_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Blobstore) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Blobstore) ProtoMessage() {}

func (x *Blobstore) ProtoReflect() protoreflect.Message {
	mi := &file_o5_application_v1_application_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Blobstore.ProtoReflect.Descriptor instead.
func (*Blobstore) Descriptor() ([]byte, []int) {
	return file_o5_application_v1_application_proto_rawDescGZIP(), []int{4}
}

func (x *Blobstore) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Blobstore) GetGrants() []*Grant {
	if x != nil {
		return x.Grants
	}
	return nil
}

func (x *Blobstore) GetRef() *BlobstoreRef {
	if x != nil {
		return x.Ref
	}
	return nil
}

type BlobstoreRef struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// This application is allowed to read from the
	// bucket. Default is true unless write_permission is true.
	ReadPermission bool `protobuf:"varint,1,opt,name=read_permission,json=readPermission,proto3" json:"read_permission,omitempty"`
	// This application is allowed to write to the bucket. Does not imply
	// read_permissions. Default is false.
	WritePermission bool `protobuf:"varint,2,opt,name=write_permission,json=writePermission,proto3" json:"write_permission,omitempty"`
	// Types that are assignable to Source:
	//
	//	*BlobstoreRef_Application
	//	*BlobstoreRef_BucketName
	Source isBlobstoreRef_Source `protobuf_oneof:"source"`
}

func (x *BlobstoreRef) Reset() {
	*x = BlobstoreRef{}
	if protoimpl.UnsafeEnabled {
		mi := &file_o5_application_v1_application_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlobstoreRef) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlobstoreRef) ProtoMessage() {}

func (x *BlobstoreRef) ProtoReflect() protoreflect.Message {
	mi := &file_o5_application_v1_application_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlobstoreRef.ProtoReflect.Descriptor instead.
func (*BlobstoreRef) Descriptor() ([]byte, []int) {
	return file_o5_application_v1_application_proto_rawDescGZIP(), []int{5}
}

func (x *BlobstoreRef) GetReadPermission() bool {
	if x != nil {
		return x.ReadPermission
	}
	return false
}

func (x *BlobstoreRef) GetWritePermission() bool {
	if x != nil {
		return x.WritePermission
	}
	return false
}

func (m *BlobstoreRef) GetSource() isBlobstoreRef_Source {
	if m != nil {
		return m.Source
	}
	return nil
}

func (x *BlobstoreRef) GetApplication() string {
	if x, ok := x.GetSource().(*BlobstoreRef_Application); ok {
		return x.Application
	}
	return ""
}

func (x *BlobstoreRef) GetBucketName() string {
	if x, ok := x.GetSource().(*BlobstoreRef_BucketName); ok {
		return x.BucketName
	}
	return ""
}

type isBlobstoreRef_Source interface {
	isBlobstoreRef_Source()
}

type BlobstoreRef_Application struct {
	Application string `protobuf:"bytes,10,opt,name=application,proto3,oneof"` // `application.name` for an app in the same environment
}

type BlobstoreRef_BucketName struct {
	// Full name of the 'bucket' for the blobstore,
	// does not follow any patterns.
	BucketName string `protobuf:"bytes,11,opt,name=bucket_name,json=bucketName,proto3,oneof"`
}

func (*BlobstoreRef_Application) isBlobstoreRef_Source() {}

func (*BlobstoreRef_BucketName) isBlobstoreRef_Source() {}

type Grant struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Principal string `protobuf:"bytes,1,opt,name=principal,proto3" json:"principal,omitempty"` // This is a lookup in the env file
}

func (x *Grant) Reset() {
	*x = Grant{}
	if protoimpl.UnsafeEnabled {
		mi := &file_o5_application_v1_application_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Grant) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Grant) ProtoMessage() {}

func (x *Grant) ProtoReflect() protoreflect.Message {
	mi := &file_o5_application_v1_application_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Grant.ProtoReflect.Descriptor instead.
func (*Grant) Descriptor() ([]byte, []int) {
	return file_o5_application_v1_application_proto_rawDescGZIP(), []int{6}
}

func (x *Grant) GetPrincipal() string {
	if x != nil {
		return x.Principal
	}
	return ""
}

type Database struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Types that are assignable to Engine:
	//
	//	*Database_Postgres_
	Engine isDatabase_Engine `protobuf_oneof:"engine"`
}

func (x *Database) Reset() {
	*x = Database{}
	if protoimpl.UnsafeEnabled {
		mi := &file_o5_application_v1_application_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Database) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Database) ProtoMessage() {}

func (x *Database) ProtoReflect() protoreflect.Message {
	mi := &file_o5_application_v1_application_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Database.ProtoReflect.Descriptor instead.
func (*Database) Descriptor() ([]byte, []int) {
	return file_o5_application_v1_application_proto_rawDescGZIP(), []int{7}
}

func (x *Database) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (m *Database) GetEngine() isDatabase_Engine {
	if m != nil {
		return m.Engine
	}
	return nil
}

func (x *Database) GetPostgres() *Database_Postgres {
	if x, ok := x.GetEngine().(*Database_Postgres_); ok {
		return x.Postgres
	}
	return nil
}

type isDatabase_Engine interface {
	isDatabase_Engine()
}

type Database_Postgres_ struct {
	Postgres *Database_Postgres `protobuf:"bytes,10,opt,name=postgres,proto3,oneof"`
}

func (*Database_Postgres_) isDatabase_Engine() {}

type Runtime struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// When true, HTTP and gRPC requests will be routed directly to the runtime
	// container, not via the ingress sidecar. The runtime container is
	// responsible for all security, throttling etc.
	DirectIngress bool            `protobuf:"varint,2,opt,name=direct_ingress,json=directIngress,proto3" json:"direct_ingress,omitempty"`
	Containers    []*Container    `protobuf:"bytes,3,rep,name=containers,proto3" json:"containers,omitempty"`
	Routes        []*Route        `protobuf:"bytes,4,rep,name=routes,proto3" json:"routes,omitempty"`
	Subscriptions []*Subscription `protobuf:"bytes,5,rep,name=subscriptions,proto3" json:"subscriptions,omitempty"`
	// when true, marks this application as a deployer app, meaning it should have
	// permissions to deploy itself and other permissions
	GrantMetaDeployPermissions bool `protobuf:"varint,6,opt,name=grant_meta_deploy_permissions,json=grantMetaDeployPermissions,proto3" json:"grant_meta_deploy_permissions,omitempty"`
}

func (x *Runtime) Reset() {
	*x = Runtime{}
	if protoimpl.UnsafeEnabled {
		mi := &file_o5_application_v1_application_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Runtime) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Runtime) ProtoMessage() {}

func (x *Runtime) ProtoReflect() protoreflect.Message {
	mi := &file_o5_application_v1_application_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Runtime.ProtoReflect.Descriptor instead.
func (*Runtime) Descriptor() ([]byte, []int) {
	return file_o5_application_v1_application_proto_rawDescGZIP(), []int{8}
}

func (x *Runtime) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Runtime) GetDirectIngress() bool {
	if x != nil {
		return x.DirectIngress
	}
	return false
}

func (x *Runtime) GetContainers() []*Container {
	if x != nil {
		return x.Containers
	}
	return nil
}

func (x *Runtime) GetRoutes() []*Route {
	if x != nil {
		return x.Routes
	}
	return nil
}

func (x *Runtime) GetSubscriptions() []*Subscription {
	if x != nil {
		return x.Subscriptions
	}
	return nil
}

func (x *Runtime) GetGrantMetaDeployPermissions() bool {
	if x != nil {
		return x.GrantMetaDeployPermissions
	}
	return false
}

type Subscription struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name            string  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	EnvName         *string `protobuf:"bytes,2,opt,name=env_name,json=envName,proto3,oneof" json:"env_name,omitempty"`
	TargetContainer string  `protobuf:"bytes,3,opt,name=target_container,json=targetContainer,proto3" json:"target_container,omitempty"` // Default: first defined container
	Port            int64   `protobuf:"varint,4,opt,name=port,proto3" json:"port,omitempty"`                                             // Default: 8080
	// Baz in the method /foo.bar.v1.FooBar/Baz
	// Subscribes only to the method, if not set, subscribes to all methods
	GrpcMethod *string `protobuf:"bytes,5,opt,name=grpc_method,json=grpcMethod,proto3,oneof" json:"grpc_method,omitempty"`
	// For request-reply replies, filters to the reply.reply_to field
	ReplyTo *string `protobuf:"bytes,6,opt,name=reply_to,json=replyTo,proto3,oneof" json:"reply_to,omitempty"`
	// The payload is not the standard messaging payload
	// It should be parsed into a o5.messaging.v1.topic.RawMessage
	// Used for infrastructure messages, e.g. AWS EventBridge or CloudWatch events.
	// Setting non_grpc in AWS will set 'rawMessageDelivery' to *false*, i.e., the SNS wrapper
	// will be included.
	RawMessage bool `protobuf:"varint,7,opt,name=raw_message,json=rawMessage,proto3" json:"raw_message,omitempty"`
}

func (x *Subscription) Reset() {
	*x = Subscription{}
	if protoimpl.UnsafeEnabled {
		mi := &file_o5_application_v1_application_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Subscription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Subscription) ProtoMessage() {}

func (x *Subscription) ProtoReflect() protoreflect.Message {
	mi := &file_o5_application_v1_application_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Subscription.ProtoReflect.Descriptor instead.
func (*Subscription) Descriptor() ([]byte, []int) {
	return file_o5_application_v1_application_proto_rawDescGZIP(), []int{9}
}

func (x *Subscription) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Subscription) GetEnvName() string {
	if x != nil && x.EnvName != nil {
		return *x.EnvName
	}
	return ""
}

func (x *Subscription) GetTargetContainer() string {
	if x != nil {
		return x.TargetContainer
	}
	return ""
}

func (x *Subscription) GetPort() int64 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *Subscription) GetGrpcMethod() string {
	if x != nil && x.GrpcMethod != nil {
		return *x.GrpcMethod
	}
	return ""
}

func (x *Subscription) GetReplyTo() string {
	if x != nil && x.ReplyTo != nil {
		return *x.ReplyTo
	}
	return ""
}

func (x *Subscription) GetRawMessage() bool {
	if x != nil {
		return x.RawMessage
	}
	return false
}

type Route struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Default is not to filter, but requires the route_group to be FALLBACK
	Prefix string `protobuf:"bytes,1,opt,name=prefix,proto3" json:"prefix,omitempty"`
	// For envifonments which support subdomains, this becomes the prefix on the
	// domain filter. Wildcards are supported.
	Subdomains      []string      `protobuf:"bytes,7,rep,name=subdomains,proto3" json:"subdomains,omitempty"`
	Protocol        RouteProtocol `protobuf:"varint,2,opt,name=protocol,proto3,enum=o5.application.v1.RouteProtocol" json:"protocol,omitempty"`
	TargetContainer string        `protobuf:"bytes,3,opt,name=target_container,json=targetContainer,proto3" json:"target_container,omitempty"`                     // Default: first defined container
	BypassIngress   bool          `protobuf:"varint,4,opt,name=bypass_ingress,json=bypassIngress,proto3" json:"bypass_ingress,omitempty"`                          // Default: false
	Port            int64         `protobuf:"varint,5,opt,name=port,proto3" json:"port,omitempty"`                                                                 // Default: 8080
	RouteGroup      RouteGroup    `protobuf:"varint,6,opt,name=route_group,json=routeGroup,proto3,enum=o5.application.v1.RouteGroup" json:"route_group,omitempty"` // Default: NORMAL
}

func (x *Route) Reset() {
	*x = Route{}
	if protoimpl.UnsafeEnabled {
		mi := &file_o5_application_v1_application_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Route) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Route) ProtoMessage() {}

func (x *Route) ProtoReflect() protoreflect.Message {
	mi := &file_o5_application_v1_application_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Route.ProtoReflect.Descriptor instead.
func (*Route) Descriptor() ([]byte, []int) {
	return file_o5_application_v1_application_proto_rawDescGZIP(), []int{10}
}

func (x *Route) GetPrefix() string {
	if x != nil {
		return x.Prefix
	}
	return ""
}

func (x *Route) GetSubdomains() []string {
	if x != nil {
		return x.Subdomains
	}
	return nil
}

func (x *Route) GetProtocol() RouteProtocol {
	if x != nil {
		return x.Protocol
	}
	return RouteProtocol_ROUTE_PROTOCOL_UNSPECIFIED
}

func (x *Route) GetTargetContainer() string {
	if x != nil {
		return x.TargetContainer
	}
	return ""
}

func (x *Route) GetBypassIngress() bool {
	if x != nil {
		return x.BypassIngress
	}
	return false
}

func (x *Route) GetPort() int64 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *Route) GetRouteGroup() RouteGroup {
	if x != nil {
		return x.RouteGroup
	}
	return RouteGroup_ROUTE_GROUP_UNSPECIFIED
}

type Container struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Types that are assignable to Source:
	//
	//	*Container_ImageUrl
	//	*Container_Image_
	Source  isContainer_Source `protobuf_oneof:"source"`
	Command []string           `protobuf:"bytes,4,rep,name=command,proto3" json:"command,omitempty"`
	// The amount of Memory and CPU to allocate to the container
	Demand  Demand                 `protobuf:"varint,5,opt,name=demand,proto3,enum=o5.application.v1.Demand" json:"demand,omitempty"`
	EnvVars []*EnvironmentVariable `protobuf:"bytes,6,rep,name=env_vars,json=envVars,proto3" json:"env_vars,omitempty"`
	// gives access to /var/run/docker.sock in the container
	MountDockerSocket bool `protobuf:"varint,7,opt,name=mount_docker_socket,json=mountDockerSocket,proto3" json:"mount_docker_socket,omitempty"`
}

func (x *Container) Reset() {
	*x = Container{}
	if protoimpl.UnsafeEnabled {
		mi := &file_o5_application_v1_application_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Container) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Container) ProtoMessage() {}

func (x *Container) ProtoReflect() protoreflect.Message {
	mi := &file_o5_application_v1_application_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Container.ProtoReflect.Descriptor instead.
func (*Container) Descriptor() ([]byte, []int) {
	return file_o5_application_v1_application_proto_rawDescGZIP(), []int{11}
}

func (x *Container) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (m *Container) GetSource() isContainer_Source {
	if m != nil {
		return m.Source
	}
	return nil
}

func (x *Container) GetImageUrl() string {
	if x, ok := x.GetSource().(*Container_ImageUrl); ok {
		return x.ImageUrl
	}
	return ""
}

func (x *Container) GetImage() *Container_Image {
	if x, ok := x.GetSource().(*Container_Image_); ok {
		return x.Image
	}
	return nil
}

func (x *Container) GetCommand() []string {
	if x != nil {
		return x.Command
	}
	return nil
}

func (x *Container) GetDemand() Demand {
	if x != nil {
		return x.Demand
	}
	return Demand_DEMAND_UNSPECIFIED
}

func (x *Container) GetEnvVars() []*EnvironmentVariable {
	if x != nil {
		return x.EnvVars
	}
	return nil
}

func (x *Container) GetMountDockerSocket() bool {
	if x != nil {
		return x.MountDockerSocket
	}
	return false
}

type isContainer_Source interface {
	isContainer_Source()
}

type Container_ImageUrl struct {
	ImageUrl string `protobuf:"bytes,2,opt,name=image_url,json=imageUrl,proto3,oneof"`
}

type Container_Image_ struct {
	Image *Container_Image `protobuf:"bytes,3,opt,name=image,proto3,oneof"`
}

func (*Container_ImageUrl) isContainer_Source() {}

func (*Container_Image_) isContainer_Source() {}

type EnvironmentVariable struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Types that are assignable to Spec:
	//
	//	*EnvironmentVariable_Value
	//	*EnvironmentVariable_Database
	//	*EnvironmentVariable_Blobstore
	//	*EnvironmentVariable_EnvMap
	//	*EnvironmentVariable_FromEnv
	//	*EnvironmentVariable_Secret
	//	*EnvironmentVariable_O5
	Spec isEnvironmentVariable_Spec `protobuf_oneof:"spec"`
}

func (x *EnvironmentVariable) Reset() {
	*x = EnvironmentVariable{}
	if protoimpl.UnsafeEnabled {
		mi := &file_o5_application_v1_application_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnvironmentVariable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnvironmentVariable) ProtoMessage() {}

func (x *EnvironmentVariable) ProtoReflect() protoreflect.Message {
	mi := &file_o5_application_v1_application_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnvironmentVariable.ProtoReflect.Descriptor instead.
func (*EnvironmentVariable) Descriptor() ([]byte, []int) {
	return file_o5_application_v1_application_proto_rawDescGZIP(), []int{12}
}

func (x *EnvironmentVariable) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (m *EnvironmentVariable) GetSpec() isEnvironmentVariable_Spec {
	if m != nil {
		return m.Spec
	}
	return nil
}

func (x *EnvironmentVariable) GetValue() string {
	if x, ok := x.GetSpec().(*EnvironmentVariable_Value); ok {
		return x.Value
	}
	return ""
}

func (x *EnvironmentVariable) GetDatabase() *DatabaseEnvVar {
	if x, ok := x.GetSpec().(*EnvironmentVariable_Database); ok {
		return x.Database
	}
	return nil
}

func (x *EnvironmentVariable) GetBlobstore() *BlobstoreEnvVar {
	if x, ok := x.GetSpec().(*EnvironmentVariable_Blobstore); ok {
		return x.Blobstore
	}
	return nil
}

func (x *EnvironmentVariable) GetEnvMap() *MapEnvVar {
	if x, ok := x.GetSpec().(*EnvironmentVariable_EnvMap); ok {
		return x.EnvMap
	}
	return nil
}

func (x *EnvironmentVariable) GetFromEnv() *FromEnvVar {
	if x, ok := x.GetSpec().(*EnvironmentVariable_FromEnv); ok {
		return x.FromEnv
	}
	return nil
}

func (x *EnvironmentVariable) GetSecret() *SecretEnvVar {
	if x, ok := x.GetSpec().(*EnvironmentVariable_Secret); ok {
		return x.Secret
	}
	return nil
}

func (x *EnvironmentVariable) GetO5() O5Var {
	if x, ok := x.GetSpec().(*EnvironmentVariable_O5); ok {
		return x.O5
	}
	return O5Var_O5_VAR_UNSPECIFIED
}

type isEnvironmentVariable_Spec interface {
	isEnvironmentVariable_Spec()
}

type EnvironmentVariable_Value struct {
	Value string `protobuf:"bytes,9,opt,name=value,proto3,oneof"`
}

type EnvironmentVariable_Database struct {
	Database *DatabaseEnvVar `protobuf:"bytes,10,opt,name=database,proto3,oneof"`
}

type EnvironmentVariable_Blobstore struct {
	Blobstore *BlobstoreEnvVar `protobuf:"bytes,11,opt,name=blobstore,proto3,oneof"`
}

type EnvironmentVariable_EnvMap struct {
	EnvMap *MapEnvVar `protobuf:"bytes,12,opt,name=env_map,json=envMap,proto3,oneof"`
}

type EnvironmentVariable_FromEnv struct {
	FromEnv *FromEnvVar `protobuf:"bytes,13,opt,name=from_env,json=fromEnv,proto3,oneof"`
}

type EnvironmentVariable_Secret struct {
	Secret *SecretEnvVar `protobuf:"bytes,14,opt,name=secret,proto3,oneof"`
}

type EnvironmentVariable_O5 struct {
	O5 O5Var `protobuf:"varint,15,opt,name=o5,proto3,enum=o5.application.v1.O5Var,oneof"`
}

func (*EnvironmentVariable_Value) isEnvironmentVariable_Spec() {}

func (*EnvironmentVariable_Database) isEnvironmentVariable_Spec() {}

func (*EnvironmentVariable_Blobstore) isEnvironmentVariable_Spec() {}

func (*EnvironmentVariable_EnvMap) isEnvironmentVariable_Spec() {}

func (*EnvironmentVariable_FromEnv) isEnvironmentVariable_Spec() {}

func (*EnvironmentVariable_Secret) isEnvironmentVariable_Spec() {}

func (*EnvironmentVariable_O5) isEnvironmentVariable_Spec() {}

type DatabaseEnvVar struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// references a database in the top level array
	DatabaseName string `protobuf:"bytes,1,opt,name=database_name,json=databaseName,proto3" json:"database_name,omitempty"`
}

func (x *DatabaseEnvVar) Reset() {
	*x = DatabaseEnvVar{}
	if protoimpl.UnsafeEnabled {
		mi := &file_o5_application_v1_application_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DatabaseEnvVar) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatabaseEnvVar) ProtoMessage() {}

func (x *DatabaseEnvVar) ProtoReflect() protoreflect.Message {
	mi := &file_o5_application_v1_application_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatabaseEnvVar.ProtoReflect.Descriptor instead.
func (*DatabaseEnvVar) Descriptor() ([]byte, []int) {
	return file_o5_application_v1_application_proto_rawDescGZIP(), []int{13}
}

func (x *DatabaseEnvVar) GetDatabaseName() string {
	if x != nil {
		return x.DatabaseName
	}
	return ""
}

type BlobstoreEnvVar struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	SubPath *string `protobuf:"bytes,2,opt,name=sub_path,json=subPath,proto3,oneof" json:"sub_path,omitempty"`
	// Types that are assignable to Format:
	//
	//	*BlobstoreEnvVar_S3Direct
	Format isBlobstoreEnvVar_Format `protobuf_oneof:"format"`
}

func (x *BlobstoreEnvVar) Reset() {
	*x = BlobstoreEnvVar{}
	if protoimpl.UnsafeEnabled {
		mi := &file_o5_application_v1_application_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlobstoreEnvVar) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlobstoreEnvVar) ProtoMessage() {}

func (x *BlobstoreEnvVar) ProtoReflect() protoreflect.Message {
	mi := &file_o5_application_v1_application_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlobstoreEnvVar.ProtoReflect.Descriptor instead.
func (*BlobstoreEnvVar) Descriptor() ([]byte, []int) {
	return file_o5_application_v1_application_proto_rawDescGZIP(), []int{14}
}

func (x *BlobstoreEnvVar) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *BlobstoreEnvVar) GetSubPath() string {
	if x != nil && x.SubPath != nil {
		return *x.SubPath
	}
	return ""
}

func (m *BlobstoreEnvVar) GetFormat() isBlobstoreEnvVar_Format {
	if m != nil {
		return m.Format
	}
	return nil
}

func (x *BlobstoreEnvVar) GetS3Direct() bool {
	if x, ok := x.GetFormat().(*BlobstoreEnvVar_S3Direct); ok {
		return x.S3Direct
	}
	return false
}

type isBlobstoreEnvVar_Format interface {
	isBlobstoreEnvVar_Format()
}

type BlobstoreEnvVar_S3Direct struct {
	// Sets the variable as s3://<bucket>/<?sub_path>
	// TODO: Deprecate this and build a wrapper through the sidecar
	S3Direct bool `protobuf:"varint,10,opt,name=s3_direct,json=s3Direct,proto3,oneof"`
}

func (*BlobstoreEnvVar_S3Direct) isBlobstoreEnvVar_Format() {}

type MapEnvVar struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MapEnvVar) Reset() {
	*x = MapEnvVar{}
	if protoimpl.UnsafeEnabled {
		mi := &file_o5_application_v1_application_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MapEnvVar) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MapEnvVar) ProtoMessage() {}

func (x *MapEnvVar) ProtoReflect() protoreflect.Message {
	mi := &file_o5_application_v1_application_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MapEnvVar.ProtoReflect.Descriptor instead.
func (*MapEnvVar) Descriptor() ([]byte, []int) {
	return file_o5_application_v1_application_proto_rawDescGZIP(), []int{15}
}

type FromEnvVar struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *FromEnvVar) Reset() {
	*x = FromEnvVar{}
	if protoimpl.UnsafeEnabled {
		mi := &file_o5_application_v1_application_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FromEnvVar) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FromEnvVar) ProtoMessage() {}

func (x *FromEnvVar) ProtoReflect() protoreflect.Message {
	mi := &file_o5_application_v1_application_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FromEnvVar.ProtoReflect.Descriptor instead.
func (*FromEnvVar) Descriptor() ([]byte, []int) {
	return file_o5_application_v1_application_proto_rawDescGZIP(), []int{16}
}

func (x *FromEnvVar) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type SecretEnvVar struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SecretName string `protobuf:"bytes,1,opt,name=secret_name,json=secretName,proto3" json:"secret_name,omitempty"`
	JsonKey    string `protobuf:"bytes,2,opt,name=json_key,json=jsonKey,proto3" json:"json_key,omitempty"`
}

func (x *SecretEnvVar) Reset() {
	*x = SecretEnvVar{}
	if protoimpl.UnsafeEnabled {
		mi := &file_o5_application_v1_application_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SecretEnvVar) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SecretEnvVar) ProtoMessage() {}

func (x *SecretEnvVar) ProtoReflect() protoreflect.Message {
	mi := &file_o5_application_v1_application_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SecretEnvVar.ProtoReflect.Descriptor instead.
func (*SecretEnvVar) Descriptor() ([]byte, []int) {
	return file_o5_application_v1_application_proto_rawDescGZIP(), []int{17}
}

func (x *SecretEnvVar) GetSecretName() string {
	if x != nil {
		return x.SecretName
	}
	return ""
}

func (x *SecretEnvVar) GetJsonKey() string {
	if x != nil {
		return x.JsonKey
	}
	return ""
}

type Secret struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Secret) Reset() {
	*x = Secret{}
	if protoimpl.UnsafeEnabled {
		mi := &file_o5_application_v1_application_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Secret) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Secret) ProtoMessage() {}

func (x *Secret) ProtoReflect() protoreflect.Message {
	mi := &file_o5_application_v1_application_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Secret.ProtoReflect.Descriptor instead.
func (*Secret) Descriptor() ([]byte, []int) {
	return file_o5_application_v1_application_proto_rawDescGZIP(), []int{18}
}

func (x *Secret) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type AWSConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ses                *AWSConfig_SES                `protobuf:"bytes,1,opt,name=ses,proto3" json:"ses,omitempty"`
	SqsPublishAnywhere *AWSConfig_SQSPublishAnywhere `protobuf:"bytes,2,opt,name=sqs_publish_anywhere,json=sqsPublishAnywhere,proto3" json:"sqs_publish_anywhere,omitempty"`
}

func (x *AWSConfig) Reset() {
	*x = AWSConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_o5_application_v1_application_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AWSConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AWSConfig) ProtoMessage() {}

func (x *AWSConfig) ProtoReflect() protoreflect.Message {
	mi := &file_o5_application_v1_application_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AWSConfig.ProtoReflect.Descriptor instead.
func (*AWSConfig) Descriptor() ([]byte, []int) {
	return file_o5_application_v1_application_proto_rawDescGZIP(), []int{19}
}

func (x *AWSConfig) GetSes() *AWSConfig_SES {
	if x != nil {
		return x.Ses
	}
	return nil
}

func (x *AWSConfig) GetSqsPublishAnywhere() *AWSConfig_SQSPublishAnywhere {
	if x != nil {
		return x.SqsPublishAnywhere
	}
	return nil
}

type Database_Postgres struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The name of the database within the postgres instance, default is the
	// name in the parent message
	DbName string `protobuf:"bytes,1,opt,name=db_name,json=dbName,proto3" json:"db_name,omitempty"`
	// default is 'default' - identifies which database server from the
	// environment config this belongs with
	ServerGroup      string     `protobuf:"bytes,2,opt,name=server_group,json=serverGroup,proto3" json:"server_group,omitempty"`
	DbExtensions     []string   `protobuf:"bytes,3,rep,name=db_extensions,json=dbExtensions,proto3" json:"db_extensions,omitempty"`
	MigrateContainer *Container `protobuf:"bytes,4,opt,name=migrate_container,json=migrateContainer,proto3" json:"migrate_container,omitempty"`
	RunOutbox        bool       `protobuf:"varint,5,opt,name=run_outbox,json=runOutbox,proto3" json:"run_outbox,omitempty"`
}

func (x *Database_Postgres) Reset() {
	*x = Database_Postgres{}
	if protoimpl.UnsafeEnabled {
		mi := &file_o5_application_v1_application_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Database_Postgres) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Database_Postgres) ProtoMessage() {}

func (x *Database_Postgres) ProtoReflect() protoreflect.Message {
	mi := &file_o5_application_v1_application_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Database_Postgres.ProtoReflect.Descriptor instead.
func (*Database_Postgres) Descriptor() ([]byte, []int) {
	return file_o5_application_v1_application_proto_rawDescGZIP(), []int{7, 0}
}

func (x *Database_Postgres) GetDbName() string {
	if x != nil {
		return x.DbName
	}
	return ""
}

func (x *Database_Postgres) GetServerGroup() string {
	if x != nil {
		return x.ServerGroup
	}
	return ""
}

func (x *Database_Postgres) GetDbExtensions() []string {
	if x != nil {
		return x.DbExtensions
	}
	return nil
}

func (x *Database_Postgres) GetMigrateContainer() *Container {
	if x != nil {
		return x.MigrateContainer
	}
	return nil
}

func (x *Database_Postgres) GetRunOutbox() bool {
	if x != nil {
		return x.RunOutbox
	}
	return false
}

type Container_Image struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Defaults to the full git hash being deployed (or passed in --version
	// parameter)
	Tag *string `protobuf:"bytes,2,opt,name=tag,proto3,oneof" json:"tag,omitempty"`
	// Defaults to the environment's registry, set here to override
	Registry *string `protobuf:"bytes,3,opt,name=registry,proto3,oneof" json:"registry,omitempty"`
}

func (x *Container_Image) Reset() {
	*x = Container_Image{}
	if protoimpl.UnsafeEnabled {
		mi := &file_o5_application_v1_application_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Container_Image) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Container_Image) ProtoMessage() {}

func (x *Container_Image) ProtoReflect() protoreflect.Message {
	mi := &file_o5_application_v1_application_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Container_Image.ProtoReflect.Descriptor instead.
func (*Container_Image) Descriptor() ([]byte, []int) {
	return file_o5_application_v1_application_proto_rawDescGZIP(), []int{11, 0}
}

func (x *Container_Image) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Container_Image) GetTag() string {
	if x != nil && x.Tag != nil {
		return *x.Tag
	}
	return ""
}

func (x *Container_Image) GetRegistry() string {
	if x != nil && x.Registry != nil {
		return *x.Registry
	}
	return ""
}

type AWSConfig_SES struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SendEmail bool `protobuf:"varint,1,opt,name=send_email,json=sendEmail,proto3" json:"send_email,omitempty"`
}

func (x *AWSConfig_SES) Reset() {
	*x = AWSConfig_SES{}
	if protoimpl.UnsafeEnabled {
		mi := &file_o5_application_v1_application_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AWSConfig_SES) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AWSConfig_SES) ProtoMessage() {}

func (x *AWSConfig_SES) ProtoReflect() protoreflect.Message {
	mi := &file_o5_application_v1_application_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AWSConfig_SES.ProtoReflect.Descriptor instead.
func (*AWSConfig_SES) Descriptor() ([]byte, []int) {
	return file_o5_application_v1_application_proto_rawDescGZIP(), []int{19, 0}
}

func (x *AWSConfig_SES) GetSendEmail() bool {
	if x != nil {
		return x.SendEmail
	}
	return false
}

type AWSConfig_SQSPublishAnywhere struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SendAnywhere bool `protobuf:"varint,1,opt,name=send_anywhere,json=sendAnywhere,proto3" json:"send_anywhere,omitempty"`
}

func (x *AWSConfig_SQSPublishAnywhere) Reset() {
	*x = AWSConfig_SQSPublishAnywhere{}
	if protoimpl.UnsafeEnabled {
		mi := &file_o5_application_v1_application_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AWSConfig_SQSPublishAnywhere) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AWSConfig_SQSPublishAnywhere) ProtoMessage() {}

func (x *AWSConfig_SQSPublishAnywhere) ProtoReflect() protoreflect.Message {
	mi := &file_o5_application_v1_application_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AWSConfig_SQSPublishAnywhere.ProtoReflect.Descriptor instead.
func (*AWSConfig_SQSPublishAnywhere) Descriptor() ([]byte, []int) {
	return file_o5_application_v1_application_proto_rawDescGZIP(), []int{19, 1}
}

func (x *AWSConfig_SQSPublishAnywhere) GetSendAnywhere() bool {
	if x != nil {
		return x.SendAnywhere
	}
	return false
}

var File_o5_application_v1_application_proto protoreflect.FileDescriptor

var file_o5_application_v1_application_proto_rawDesc = []byte{
	0x0a, 0x23, 0x6f, 0x35, 0x2f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2f, 0x76, 0x31, 0x2f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11, 0x6f, 0x35, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x1a, 0x1b, 0x62, 0x75, 0x66, 0x2f, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x70, 0x73, 0x6d, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x2f,
	0x76, 0x31, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xad, 0x04, 0x0a, 0x0b, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2b, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x17, 0xba, 0x48, 0x14, 0x72, 0x12, 0x32, 0x10, 0x5e, 0x5b, 0x61, 0x2d, 0x7a,
	0x5d, 0x5b, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x5d, 0x2b, 0x24, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x33, 0x0a, 0x07, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6f, 0x35, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x07, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x12, 0x3c, 0x0a, 0x0a, 0x62, 0x6c, 0x6f, 0x62, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6f, 0x35, 0x2e,
	0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x42,
	0x6c, 0x6f, 0x62, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x0a, 0x62, 0x6c, 0x6f, 0x62, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x73, 0x12, 0x39, 0x0a, 0x09, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65,
	0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6f, 0x35, 0x2e, 0x61, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x61, 0x74, 0x61,
	0x62, 0x61, 0x73, 0x65, 0x52, 0x09, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x73, 0x12,
	0x36, 0x0a, 0x08, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x6f, 0x35, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x52, 0x08, 0x72,
	0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x33, 0x0a, 0x07, 0x73, 0x65, 0x63, 0x72, 0x65,
	0x74, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6f, 0x35, 0x2e, 0x61, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x63,
	0x72, 0x65, 0x74, 0x52, 0x07, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x73, 0x12, 0x50, 0x0a, 0x11,
	0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6f, 0x35, 0x2e, 0x61, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x70, 0x6c,
	0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x10, 0x64, 0x65,
	0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x3b,
	0x0a, 0x0a, 0x61, 0x77, 0x73, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6f, 0x35, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x57, 0x53, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x09, 0x61, 0x77, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x47, 0x0a, 0x0e, 0x73,
	0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6f, 0x35, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0d, 0x73, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x22, 0x77, 0x0a, 0x0d, 0x53, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x2e, 0x0a, 0x0d, 0x72, 0x65, 0x70, 0x6c, 0x61, 0x79, 0x5f,
	0x63, 0x68, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x09, 0xba, 0x48,
	0x06, 0x22, 0x04, 0x18, 0x64, 0x28, 0x00, 0x52, 0x0c, 0x72, 0x65, 0x70, 0x6c, 0x61, 0x79, 0x43,
	0x68, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x36, 0x0a, 0x11, 0x64, 0x65, 0x61, 0x64, 0x6c, 0x65, 0x74,
	0x74, 0x65, 0x72, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x42, 0x09, 0xba, 0x48, 0x06, 0x22, 0x04, 0x18, 0x64, 0x28, 0x00, 0x52, 0x10, 0x64, 0x65, 0x61,
	0x64, 0x6c, 0x65, 0x74, 0x74, 0x65, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x63, 0x65, 0x22, 0x31, 0x0a,
	0x10, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x71, 0x75, 0x69, 0x63, 0x6b, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x71, 0x75, 0x69, 0x63, 0x6b, 0x4d, 0x6f, 0x64, 0x65,
	0x22, 0x1c, 0x0a, 0x06, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x84,
	0x01, 0x0a, 0x09, 0x42, 0x6c, 0x6f, 0x62, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x30, 0x0a, 0x06, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x6f, 0x35, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x52, 0x06, 0x67, 0x72, 0x61, 0x6e,
	0x74, 0x73, 0x12, 0x31, 0x0a, 0x03, 0x72, 0x65, 0x66, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1f, 0x2e, 0x6f, 0x35, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6c, 0x6f, 0x62, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x66,
	0x52, 0x03, 0x72, 0x65, 0x66, 0x22, 0xb3, 0x01, 0x0a, 0x0c, 0x42, 0x6c, 0x6f, 0x62, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x52, 0x65, 0x66, 0x12, 0x27, 0x0a, 0x0f, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x70,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0e, 0x72, 0x65, 0x61, 0x64, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x29, 0x0a, 0x10, 0x77, 0x72, 0x69, 0x74, 0x65, 0x5f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x77, 0x72, 0x69, 0x74, 0x65,
	0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0b, 0x61, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x0b, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21,
	0x0a, 0x0b, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0a, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x42, 0x08, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x25, 0x0a, 0x05, 0x47,
	0x72, 0x61, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x69, 0x6e, 0x63, 0x69, 0x70, 0x61,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x69, 0x6e, 0x63, 0x69, 0x70,
	0x61, 0x6c, 0x22, 0xde, 0x02, 0x0a, 0x08, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x42, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6f, 0x35, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61,
	0x73, 0x65, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x48, 0x00, 0x52, 0x08, 0x70,
	0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x1a, 0xe3, 0x01, 0x0a, 0x08, 0x50, 0x6f, 0x73, 0x74,
	0x67, 0x72, 0x65, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x62, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x62, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a,
	0x0c, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x12, 0x23, 0x0a, 0x0d, 0x64, 0x62, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x62, 0x45, 0x78, 0x74, 0x65, 0x6e,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x49, 0x0a, 0x11, 0x6d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x65,
	0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x6f, 0x35, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x10,
	0x6d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72,
	0x12, 0x2b, 0x0a, 0x0a, 0x72, 0x75, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x62, 0x6f, 0x78, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x08, 0x42, 0x0c, 0x8a, 0x9b, 0x81, 0xca, 0x02, 0x06, 0x6a, 0x04, 0x52, 0x02,
	0x08, 0x01, 0x52, 0x09, 0x72, 0x75, 0x6e, 0x4f, 0x75, 0x74, 0x62, 0x6f, 0x78, 0x42, 0x14, 0x0a,
	0x06, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x12, 0x0a, 0x92, 0x9b, 0x81, 0xca, 0x02, 0x04, 0x52,
	0x02, 0x08, 0x01, 0x22, 0xd7, 0x02, 0x0a, 0x07, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x12,
	0x2b, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x17, 0xba,
	0x48, 0x14, 0x72, 0x12, 0x32, 0x10, 0x5e, 0x5b, 0x61, 0x2d, 0x7a, 0x5d, 0x5b, 0x61, 0x2d, 0x7a,
	0x30, 0x2d, 0x39, 0x5d, 0x2b, 0x24, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x67, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x3c, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6f, 0x35, 0x2e, 0x61, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x74,
	0x61, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72,
	0x73, 0x12, 0x30, 0x0a, 0x06, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x6f, 0x35, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x52, 0x06, 0x72, 0x6f, 0x75,
	0x74, 0x65, 0x73, 0x12, 0x45, 0x0a, 0x0d, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6f, 0x35, 0x2e,
	0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x73, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x41, 0x0a, 0x1d, 0x67, 0x72,
	0x61, 0x6e, 0x74, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x5f, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x5f,
	0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x1a, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x44, 0x65, 0x70, 0x6c,
	0x6f, 0x79, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x92, 0x02,
	0x0a, 0x0c, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x08, 0x65, 0x6e, 0x76, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x65, 0x6e, 0x76, 0x4e, 0x61, 0x6d, 0x65, 0x88,
	0x01, 0x01, 0x12, 0x29, 0x0a, 0x10, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x63, 0x6f, 0x6e,
	0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x6f, 0x72,
	0x74, 0x12, 0x24, 0x0a, 0x0b, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0a, 0x67, 0x72, 0x70, 0x63, 0x4d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08, 0x72, 0x65, 0x70, 0x6c, 0x79,
	0x5f, 0x74, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x07, 0x72, 0x65, 0x70,
	0x6c, 0x79, 0x54, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x61, 0x77, 0x5f, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x72, 0x61,
	0x77, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x65, 0x6e, 0x76,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x6d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x5f,
	0x74, 0x6f, 0x22, 0xb0, 0x02, 0x0a, 0x05, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x72,
	0x65, 0x66, 0x69, 0x78, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x75, 0x62, 0x64, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x75, 0x62, 0x64, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x73, 0x12, 0x49, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x6f, 0x35, 0x2e, 0x61, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x65,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x42, 0x0b, 0xba, 0x48, 0x08, 0x82, 0x01, 0x05,
	0x10, 0x01, 0x22, 0x01, 0x00, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12,
	0x29, 0x0a, 0x10, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69,
	0x6e, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x12, 0x25, 0x0a, 0x0e, 0x62, 0x79,
	0x70, 0x61, 0x73, 0x73, 0x5f, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0d, 0x62, 0x79, 0x70, 0x61, 0x73, 0x73, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x04, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x3e, 0x0a, 0x0b, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x5f, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x6f, 0x35, 0x2e,
	0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x6f, 0x75, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x0a, 0x72, 0x6f, 0x75, 0x74, 0x65,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x22, 0xc9, 0x03, 0x0a, 0x09, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69,
	0x6e, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x08, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x3a, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6f, 0x35, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69,
	0x6e, 0x65, 0x72, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x05, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x40, 0x0a, 0x06,
	0x64, 0x65, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x6f,
	0x35, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x44, 0x65, 0x6d, 0x61, 0x6e, 0x64, 0x42, 0x0d, 0x8a, 0x9b, 0x81, 0xca, 0x02, 0x07, 0xa2,
	0x01, 0x04, 0x52, 0x02, 0x08, 0x01, 0x52, 0x06, 0x64, 0x65, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x41,
	0x0a, 0x08, 0x65, 0x6e, 0x76, 0x5f, 0x76, 0x61, 0x72, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x26, 0x2e, 0x6f, 0x35, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x07, 0x65, 0x6e, 0x76, 0x56, 0x61, 0x72,
	0x73, 0x12, 0x2e, 0x0a, 0x13, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x64, 0x6f, 0x63, 0x6b, 0x65,
	0x72, 0x5f, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x53, 0x6f, 0x63, 0x6b, 0x65,
	0x74, 0x1a, 0x68, 0x0a, 0x05, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x15,
	0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x74,
	0x61, 0x67, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72,
	0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x08, 0x72, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x72, 0x79, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x74, 0x61, 0x67, 0x42, 0x0b,
	0x0a, 0x09, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x42, 0x14, 0x0a, 0x06, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x0a, 0x92, 0x9b, 0x81, 0xca, 0x02, 0x04, 0x52, 0x02, 0x08,
	0x01, 0x22, 0xb6, 0x03, 0x0a, 0x13, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x3f, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73,
	0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6f, 0x35, 0x2e, 0x61, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x61, 0x74, 0x61,
	0x62, 0x61, 0x73, 0x65, 0x45, 0x6e, 0x76, 0x56, 0x61, 0x72, 0x48, 0x00, 0x52, 0x08, 0x64, 0x61,
	0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x09, 0x62, 0x6c, 0x6f, 0x62, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6f, 0x35, 0x2e, 0x61,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6c,
	0x6f, 0x62, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x45, 0x6e, 0x76, 0x56, 0x61, 0x72, 0x48, 0x00, 0x52,
	0x09, 0x62, 0x6c, 0x6f, 0x62, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x12, 0x37, 0x0a, 0x07, 0x65, 0x6e,
	0x76, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6f, 0x35,
	0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x4d, 0x61, 0x70, 0x45, 0x6e, 0x76, 0x56, 0x61, 0x72, 0x48, 0x00, 0x52, 0x06, 0x65, 0x6e, 0x76,
	0x4d, 0x61, 0x70, 0x12, 0x3a, 0x0a, 0x08, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x65, 0x6e, 0x76, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6f, 0x35, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x72, 0x6f, 0x6d, 0x45, 0x6e,
	0x76, 0x56, 0x61, 0x72, 0x48, 0x00, 0x52, 0x07, 0x66, 0x72, 0x6f, 0x6d, 0x45, 0x6e, 0x76, 0x12,
	0x39, 0x0a, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1f, 0x2e, 0x6f, 0x35, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x45, 0x6e, 0x76, 0x56, 0x61, 0x72,
	0x48, 0x00, 0x52, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x2a, 0x0a, 0x02, 0x6f, 0x35,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x6f, 0x35, 0x2e, 0x61, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x35, 0x56, 0x61, 0x72,
	0x48, 0x00, 0x52, 0x02, 0x6f, 0x35, 0x42, 0x12, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x12, 0x0a,
	0x92, 0x9b, 0x81, 0xca, 0x02, 0x04, 0x52, 0x02, 0x08, 0x01, 0x22, 0x35, 0x0a, 0x0e, 0x44, 0x61,
	0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x45, 0x6e, 0x76, 0x56, 0x61, 0x72, 0x12, 0x23, 0x0a, 0x0d,
	0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x22, 0x95, 0x01, 0x0a, 0x0f, 0x42, 0x6c, 0x6f, 0x62, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x45,
	0x6e, 0x76, 0x56, 0x61, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x08, 0x73, 0x75, 0x62,
	0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x07, 0x73,
	0x75, 0x62, 0x50, 0x61, 0x74, 0x68, 0x88, 0x01, 0x01, 0x12, 0x2b, 0x0a, 0x09, 0x73, 0x33, 0x5f,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x42, 0x0c, 0x8a, 0x9b,
	0x81, 0xca, 0x02, 0x06, 0x6a, 0x04, 0x52, 0x02, 0x08, 0x01, 0x48, 0x00, 0x52, 0x08, 0x73, 0x33,
	0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x42, 0x14, 0x0a, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x12, 0x0a, 0x92, 0x9b, 0x81, 0xca, 0x02, 0x04, 0x52, 0x02, 0x08, 0x01, 0x42, 0x0b, 0x0a, 0x09,
	0x5f, 0x73, 0x75, 0x62, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x22, 0x0b, 0x0a, 0x09, 0x4d, 0x61, 0x70,
	0x45, 0x6e, 0x76, 0x56, 0x61, 0x72, 0x22, 0x20, 0x0a, 0x0a, 0x46, 0x72, 0x6f, 0x6d, 0x45, 0x6e,
	0x76, 0x56, 0x61, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x4a, 0x0a, 0x0c, 0x53, 0x65, 0x63, 0x72,
	0x65, 0x74, 0x45, 0x6e, 0x76, 0x56, 0x61, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x63, 0x72,
	0x65, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73,
	0x65, 0x63, 0x72, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6a, 0x73, 0x6f,
	0x6e, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6a, 0x73, 0x6f,
	0x6e, 0x4b, 0x65, 0x79, 0x22, 0x1c, 0x0a, 0x06, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x22, 0x83, 0x02, 0x0a, 0x09, 0x41, 0x57, 0x53, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x12, 0x32, 0x0a, 0x03, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x6f, 0x35, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x57, 0x53, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x53, 0x45, 0x53, 0x52,
	0x03, 0x73, 0x65, 0x73, 0x12, 0x61, 0x0a, 0x14, 0x73, 0x71, 0x73, 0x5f, 0x70, 0x75, 0x62, 0x6c,
	0x69, 0x73, 0x68, 0x5f, 0x61, 0x6e, 0x79, 0x77, 0x68, 0x65, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x6f, 0x35, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x57, 0x53, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x2e, 0x53, 0x51, 0x53, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x41, 0x6e, 0x79, 0x77, 0x68,
	0x65, 0x72, 0x65, 0x52, 0x12, 0x73, 0x71, 0x73, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x41,
	0x6e, 0x79, 0x77, 0x68, 0x65, 0x72, 0x65, 0x1a, 0x24, 0x0a, 0x03, 0x53, 0x45, 0x53, 0x12, 0x1d,
	0x0a, 0x0a, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x09, 0x73, 0x65, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x1a, 0x39, 0x0a,
	0x12, 0x53, 0x51, 0x53, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x41, 0x6e, 0x79, 0x77, 0x68,
	0x65, 0x72, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x61, 0x6e, 0x79, 0x77,
	0x68, 0x65, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x73, 0x65, 0x6e, 0x64,
	0x41, 0x6e, 0x79, 0x77, 0x68, 0x65, 0x72, 0x65, 0x2a, 0x61, 0x0a, 0x0d, 0x52, 0x6f, 0x75, 0x74,
	0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x1e, 0x0a, 0x1a, 0x52, 0x4f, 0x55,
	0x54, 0x45, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4f, 0x4c, 0x5f, 0x55, 0x4e, 0x53, 0x50,
	0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x17, 0x0a, 0x13, 0x52, 0x4f, 0x55,
	0x54, 0x45, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4f, 0x4c, 0x5f, 0x48, 0x54, 0x54, 0x50,
	0x10, 0x01, 0x12, 0x17, 0x0a, 0x13, 0x52, 0x4f, 0x55, 0x54, 0x45, 0x5f, 0x50, 0x52, 0x4f, 0x54,
	0x4f, 0x43, 0x4f, 0x4c, 0x5f, 0x47, 0x52, 0x50, 0x43, 0x10, 0x02, 0x2a, 0x72, 0x0a, 0x0a, 0x52,
	0x6f, 0x75, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x1b, 0x0a, 0x17, 0x52, 0x4f, 0x55,
	0x54, 0x45, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49,
	0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x52, 0x4f, 0x55, 0x54, 0x45, 0x5f,
	0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f, 0x46, 0x49, 0x52, 0x53, 0x54, 0x10, 0x01, 0x12, 0x16, 0x0a,
	0x12, 0x52, 0x4f, 0x55, 0x54, 0x45, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f, 0x4e, 0x4f, 0x52,
	0x4d, 0x41, 0x4c, 0x10, 0x02, 0x12, 0x18, 0x0a, 0x14, 0x52, 0x4f, 0x55, 0x54, 0x45, 0x5f, 0x47,
	0x52, 0x4f, 0x55, 0x50, 0x5f, 0x46, 0x41, 0x4c, 0x4c, 0x42, 0x41, 0x43, 0x4b, 0x10, 0x03, 0x2a,
	0x57, 0x0a, 0x06, 0x44, 0x65, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x16, 0x0a, 0x12, 0x44, 0x45, 0x4d,
	0x41, 0x4e, 0x44, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10,
	0x00, 0x12, 0x10, 0x0a, 0x0c, 0x44, 0x45, 0x4d, 0x41, 0x4e, 0x44, 0x5f, 0x4c, 0x49, 0x47, 0x48,
	0x54, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x44, 0x45, 0x4d, 0x41, 0x4e, 0x44, 0x5f, 0x4d, 0x45,
	0x44, 0x49, 0x55, 0x4d, 0x10, 0x02, 0x12, 0x10, 0x0a, 0x0c, 0x44, 0x45, 0x4d, 0x41, 0x4e, 0x44,
	0x5f, 0x48, 0x45, 0x41, 0x56, 0x59, 0x10, 0x03, 0x2a, 0x3c, 0x0a, 0x05, 0x4f, 0x35, 0x56, 0x61,
	0x72, 0x12, 0x16, 0x0a, 0x12, 0x4f, 0x35, 0x5f, 0x56, 0x41, 0x52, 0x5f, 0x55, 0x4e, 0x53, 0x50,
	0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1b, 0x0a, 0x17, 0x4f, 0x35, 0x5f,
	0x56, 0x41, 0x52, 0x5f, 0x41, 0x44, 0x41, 0x50, 0x54, 0x45, 0x52, 0x5f, 0x45, 0x4e, 0x44, 0x50,
	0x4f, 0x49, 0x4e, 0x54, 0x10, 0x01, 0x42, 0x38, 0x5a, 0x36, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x65, 0x6e, 0x74, 0x6f, 0x70, 0x73, 0x2f, 0x6f, 0x35, 0x2d,
	0x67, 0x6f, 0x2f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x76,
	0x31, 0x2f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x62,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_o5_application_v1_application_proto_rawDescOnce sync.Once
	file_o5_application_v1_application_proto_rawDescData = file_o5_application_v1_application_proto_rawDesc
)

func file_o5_application_v1_application_proto_rawDescGZIP() []byte {
	file_o5_application_v1_application_proto_rawDescOnce.Do(func() {
		file_o5_application_v1_application_proto_rawDescData = protoimpl.X.CompressGZIP(file_o5_application_v1_application_proto_rawDescData)
	})
	return file_o5_application_v1_application_proto_rawDescData
}

var file_o5_application_v1_application_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_o5_application_v1_application_proto_msgTypes = make([]protoimpl.MessageInfo, 24)
var file_o5_application_v1_application_proto_goTypes = []interface{}{
	(RouteProtocol)(0),                   // 0: o5.application.v1.RouteProtocol
	(RouteGroup)(0),                      // 1: o5.application.v1.RouteGroup
	(Demand)(0),                          // 2: o5.application.v1.Demand
	(O5Var)(0),                           // 3: o5.application.v1.O5Var
	(*Application)(nil),                  // 4: o5.application.v1.Application
	(*SidecarConfig)(nil),                // 5: o5.application.v1.SidecarConfig
	(*DeploymentConfig)(nil),             // 6: o5.application.v1.DeploymentConfig
	(*Target)(nil),                       // 7: o5.application.v1.Target
	(*Blobstore)(nil),                    // 8: o5.application.v1.Blobstore
	(*BlobstoreRef)(nil),                 // 9: o5.application.v1.BlobstoreRef
	(*Grant)(nil),                        // 10: o5.application.v1.Grant
	(*Database)(nil),                     // 11: o5.application.v1.Database
	(*Runtime)(nil),                      // 12: o5.application.v1.Runtime
	(*Subscription)(nil),                 // 13: o5.application.v1.Subscription
	(*Route)(nil),                        // 14: o5.application.v1.Route
	(*Container)(nil),                    // 15: o5.application.v1.Container
	(*EnvironmentVariable)(nil),          // 16: o5.application.v1.EnvironmentVariable
	(*DatabaseEnvVar)(nil),               // 17: o5.application.v1.DatabaseEnvVar
	(*BlobstoreEnvVar)(nil),              // 18: o5.application.v1.BlobstoreEnvVar
	(*MapEnvVar)(nil),                    // 19: o5.application.v1.MapEnvVar
	(*FromEnvVar)(nil),                   // 20: o5.application.v1.FromEnvVar
	(*SecretEnvVar)(nil),                 // 21: o5.application.v1.SecretEnvVar
	(*Secret)(nil),                       // 22: o5.application.v1.Secret
	(*AWSConfig)(nil),                    // 23: o5.application.v1.AWSConfig
	(*Database_Postgres)(nil),            // 24: o5.application.v1.Database.Postgres
	(*Container_Image)(nil),              // 25: o5.application.v1.Container.Image
	(*AWSConfig_SES)(nil),                // 26: o5.application.v1.AWSConfig.SES
	(*AWSConfig_SQSPublishAnywhere)(nil), // 27: o5.application.v1.AWSConfig.SQSPublishAnywhere
}
var file_o5_application_v1_application_proto_depIdxs = []int32{
	7,  // 0: o5.application.v1.Application.targets:type_name -> o5.application.v1.Target
	8,  // 1: o5.application.v1.Application.blobstores:type_name -> o5.application.v1.Blobstore
	11, // 2: o5.application.v1.Application.databases:type_name -> o5.application.v1.Database
	12, // 3: o5.application.v1.Application.runtimes:type_name -> o5.application.v1.Runtime
	22, // 4: o5.application.v1.Application.secrets:type_name -> o5.application.v1.Secret
	6,  // 5: o5.application.v1.Application.deployment_config:type_name -> o5.application.v1.DeploymentConfig
	23, // 6: o5.application.v1.Application.aws_config:type_name -> o5.application.v1.AWSConfig
	5,  // 7: o5.application.v1.Application.sidecar_config:type_name -> o5.application.v1.SidecarConfig
	10, // 8: o5.application.v1.Blobstore.grants:type_name -> o5.application.v1.Grant
	9,  // 9: o5.application.v1.Blobstore.ref:type_name -> o5.application.v1.BlobstoreRef
	24, // 10: o5.application.v1.Database.postgres:type_name -> o5.application.v1.Database.Postgres
	15, // 11: o5.application.v1.Runtime.containers:type_name -> o5.application.v1.Container
	14, // 12: o5.application.v1.Runtime.routes:type_name -> o5.application.v1.Route
	13, // 13: o5.application.v1.Runtime.subscriptions:type_name -> o5.application.v1.Subscription
	0,  // 14: o5.application.v1.Route.protocol:type_name -> o5.application.v1.RouteProtocol
	1,  // 15: o5.application.v1.Route.route_group:type_name -> o5.application.v1.RouteGroup
	25, // 16: o5.application.v1.Container.image:type_name -> o5.application.v1.Container.Image
	2,  // 17: o5.application.v1.Container.demand:type_name -> o5.application.v1.Demand
	16, // 18: o5.application.v1.Container.env_vars:type_name -> o5.application.v1.EnvironmentVariable
	17, // 19: o5.application.v1.EnvironmentVariable.database:type_name -> o5.application.v1.DatabaseEnvVar
	18, // 20: o5.application.v1.EnvironmentVariable.blobstore:type_name -> o5.application.v1.BlobstoreEnvVar
	19, // 21: o5.application.v1.EnvironmentVariable.env_map:type_name -> o5.application.v1.MapEnvVar
	20, // 22: o5.application.v1.EnvironmentVariable.from_env:type_name -> o5.application.v1.FromEnvVar
	21, // 23: o5.application.v1.EnvironmentVariable.secret:type_name -> o5.application.v1.SecretEnvVar
	3,  // 24: o5.application.v1.EnvironmentVariable.o5:type_name -> o5.application.v1.O5Var
	26, // 25: o5.application.v1.AWSConfig.ses:type_name -> o5.application.v1.AWSConfig.SES
	27, // 26: o5.application.v1.AWSConfig.sqs_publish_anywhere:type_name -> o5.application.v1.AWSConfig.SQSPublishAnywhere
	15, // 27: o5.application.v1.Database.Postgres.migrate_container:type_name -> o5.application.v1.Container
	28, // [28:28] is the sub-list for method output_type
	28, // [28:28] is the sub-list for method input_type
	28, // [28:28] is the sub-list for extension type_name
	28, // [28:28] is the sub-list for extension extendee
	0,  // [0:28] is the sub-list for field type_name
}

func init() { file_o5_application_v1_application_proto_init() }
func file_o5_application_v1_application_proto_init() {
	if File_o5_application_v1_application_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_o5_application_v1_application_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Application); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_o5_application_v1_application_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SidecarConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_o5_application_v1_application_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeploymentConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_o5_application_v1_application_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Target); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_o5_application_v1_application_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Blobstore); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_o5_application_v1_application_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlobstoreRef); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_o5_application_v1_application_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Grant); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_o5_application_v1_application_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Database); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_o5_application_v1_application_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Runtime); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_o5_application_v1_application_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Subscription); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_o5_application_v1_application_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Route); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_o5_application_v1_application_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Container); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_o5_application_v1_application_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnvironmentVariable); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_o5_application_v1_application_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DatabaseEnvVar); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_o5_application_v1_application_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlobstoreEnvVar); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_o5_application_v1_application_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MapEnvVar); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_o5_application_v1_application_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FromEnvVar); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_o5_application_v1_application_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SecretEnvVar); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_o5_application_v1_application_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Secret); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_o5_application_v1_application_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AWSConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_o5_application_v1_application_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Database_Postgres); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_o5_application_v1_application_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Container_Image); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_o5_application_v1_application_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AWSConfig_SES); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_o5_application_v1_application_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AWSConfig_SQSPublishAnywhere); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_o5_application_v1_application_proto_msgTypes[5].OneofWrappers = []interface{}{
		(*BlobstoreRef_Application)(nil),
		(*BlobstoreRef_BucketName)(nil),
	}
	file_o5_application_v1_application_proto_msgTypes[7].OneofWrappers = []interface{}{
		(*Database_Postgres_)(nil),
	}
	file_o5_application_v1_application_proto_msgTypes[9].OneofWrappers = []interface{}{}
	file_o5_application_v1_application_proto_msgTypes[11].OneofWrappers = []interface{}{
		(*Container_ImageUrl)(nil),
		(*Container_Image_)(nil),
	}
	file_o5_application_v1_application_proto_msgTypes[12].OneofWrappers = []interface{}{
		(*EnvironmentVariable_Value)(nil),
		(*EnvironmentVariable_Database)(nil),
		(*EnvironmentVariable_Blobstore)(nil),
		(*EnvironmentVariable_EnvMap)(nil),
		(*EnvironmentVariable_FromEnv)(nil),
		(*EnvironmentVariable_Secret)(nil),
		(*EnvironmentVariable_O5)(nil),
	}
	file_o5_application_v1_application_proto_msgTypes[14].OneofWrappers = []interface{}{
		(*BlobstoreEnvVar_S3Direct)(nil),
	}
	file_o5_application_v1_application_proto_msgTypes[21].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_o5_application_v1_application_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   24,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_o5_application_v1_application_proto_goTypes,
		DependencyIndexes: file_o5_application_v1_application_proto_depIdxs,
		EnumInfos:         file_o5_application_v1_application_proto_enumTypes,
		MessageInfos:      file_o5_application_v1_application_proto_msgTypes,
	}.Build()
	File_o5_application_v1_application_proto = out.File
	file_o5_application_v1_application_proto_rawDesc = nil
	file_o5_application_v1_application_proto_goTypes = nil
	file_o5_application_v1_application_proto_depIdxs = nil
}
