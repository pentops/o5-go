// Code generated by Bprotoc-gen-go-o5-messaging . DO NOT EDIT.
// versions:
// - protoc-gen-go-o5-messaging 0.0.0
// source: o5/messaging/v1/topic/raw.proto

package messaging_tpb

import (
	context "context"
	o5msg "github.com/pentops/o5-messaging.go/o5msg"
)

// Service: RawMessageTopic
type RawMessageTopicSender[C any] struct {
	Sender o5msg.Sender[C]
}

func NewRawMessageTopicSender[C any](sender o5msg.Sender[C]) *RawMessageTopicSender[C] {
	sender.Register(o5msg.TopicDescriptor{
		Service: "o5.messaging.v1.topic.RawMessageTopic",
		Methods: []o5msg.MethodDescriptor{
			{
				Name:    "Raw",
				Message: (*RawMessage).ProtoReflect(nil).Descriptor(),
			},
		},
	})
	return &RawMessageTopicSender[C]{Sender: sender}
}

type RawMessageTopicCollector[C any] struct {
	Collector o5msg.Collector[C]
}

func NewRawMessageTopicCollector[C any](collector o5msg.Collector[C]) *RawMessageTopicCollector[C] {
	collector.Register(o5msg.TopicDescriptor{
		Service: "o5.messaging.v1.topic.RawMessageTopic",
		Methods: []o5msg.MethodDescriptor{
			{
				Name:    "Raw",
				Message: (*RawMessage).ProtoReflect(nil).Descriptor(),
			},
		},
	})
	return &RawMessageTopicCollector[C]{Collector: collector}
}

// Method: Raw

func (msg *RawMessage) O5MessageHeader() o5msg.Header {
	header := o5msg.Header{
		GrpcService: "o5.messaging.v1.topic.RawMessageTopic",
		GrpcMethod:  "Raw",
		Headers:     map[string]string{},
	}
	return header
}

func (send RawMessageTopicSender[C]) Raw(ctx context.Context, sendContext C, msg *RawMessage) error {
	return send.Sender.Send(ctx, sendContext, msg)
}

func (collect RawMessageTopicCollector[C]) Raw(sendContext C, msg *RawMessage) {
	collect.Collector.Collect(sendContext, msg)
}
